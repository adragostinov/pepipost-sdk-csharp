/*
 * Pepipost
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Pepipost;
using Pepipost.Utilities;


namespace Pepipost.Models
{
    public class Send : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string replyTo;
        private Models.From mfrom;
        private string subject;
        private long? templateId;
        private List<Models.Content> content;
        private List<Models.Attachments> attachments;
        private List<Models.Personalizations> personalizations;
        private Models.Settings settings;
        private List<string> tags;
        private bool? lintPayload;
        private long? schedule;
        private List<Models.EmailStruct> bcc;

        /// <summary>
        /// email address which recipients can reply to.
        /// </summary>
        [JsonProperty("reply_to")]
        public string ReplyTo 
        { 
            get 
            {
                return this.replyTo; 
            } 
            set 
            {
                this.replyTo = value;
                onPropertyChanged("ReplyTo");
            }
        }

        /// <summary>
        /// Email address representing the sender of the mail
        /// </summary>
        [JsonProperty("from")]
        public Models.From From 
        { 
            get 
            {
                return this.mfrom; 
            } 
            set 
            {
                this.mfrom = value;
                onPropertyChanged("From");
            }
        }

        /// <summary>
        /// Subject line of the email
        /// </summary>
        [JsonProperty("subject")]
        public string Subject 
        { 
            get 
            {
                return this.subject; 
            } 
            set 
            {
                this.subject = value;
                onPropertyChanged("Subject");
            }
        }

        /// <summary>
        /// ID of the template to be used for sending the mail
        /// </summary>
        [JsonProperty("template_id")]
        public long? TemplateId 
        { 
            get 
            {
                return this.templateId; 
            } 
            set 
            {
                this.templateId = value;
                onPropertyChanged("TemplateId");
            }
        }

        /// <summary>
        /// content in text/plain format
        /// </summary>
        [JsonProperty("content")]
        public List<Models.Content> Content 
        { 
            get 
            {
                return this.content; 
            } 
            set 
            {
                this.content = value;
                onPropertyChanged("Content");
            }
        }

        /// <summary>
        /// attachment information
        /// </summary>
        [JsonProperty("attachments")]
        public List<Models.Attachments> Attachments 
        { 
            get 
            {
                return this.attachments; 
            } 
            set 
            {
                this.attachments = value;
                onPropertyChanged("Attachments");
            }
        }

        /// <summary>
        /// to recipient with some personalized data like to address, attachments and attributes
        /// </summary>
        [JsonProperty("personalizations")]
        public List<Models.Personalizations> Personalizations 
        { 
            get 
            {
                return this.personalizations; 
            } 
            set 
            {
                this.personalizations = value;
                onPropertyChanged("Personalizations");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("settings")]
        public Models.Settings Settings 
        { 
            get 
            {
                return this.settings; 
            } 
            set 
            {
                this.settings = value;
                onPropertyChanged("Settings");
            }
        }

        /// <summary>
        /// define custom tags to organize your emails
        /// </summary>
        [JsonProperty("tags")]
        public List<string> Tags 
        { 
            get 
            {
                return this.tags; 
            } 
            set 
            {
                this.tags = value;
                onPropertyChanged("Tags");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("lint_payload")]
        public bool? LintPayload 
        { 
            get 
            {
                return this.lintPayload; 
            } 
            set 
            {
                this.lintPayload = value;
                onPropertyChanged("LintPayload");
            }
        }

        /// <summary>
        /// schedule the time of email delivery
        /// </summary>
        [JsonProperty("schedule")]
        public long? Schedule 
        { 
            get 
            {
                return this.schedule; 
            } 
            set 
            {
                this.schedule = value;
                onPropertyChanged("Schedule");
            }
        }

        /// <summary>
        /// Global bcc can be defined here
        /// </summary>
        [JsonProperty("bcc")]
        public List<Models.EmailStruct> Bcc 
        { 
            get 
            {
                return this.bcc; 
            } 
            set 
            {
                this.bcc = value;
                onPropertyChanged("Bcc");
            }
        }
    }
} 